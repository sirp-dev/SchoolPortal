@model SchoolPortal.Web.Models.Entities.CategoryPage

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<div class="row">
    <!-- left column -->
    <div class="col-md-12">
        <!-- general form elements -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">New Category Page</h3>



            </div>
            <div class="box-body">

                <p>for menu "menu description" is mainmenu and sortorder is 1000001</p>
                <p>for page crumb "menu description" is DetailPageCrumb and sortorder is 9001</p>
                <p>for blog crumb "menu description" is DetailPageCrumb and sortorder is 9101</p>
                <p>for blog detail crumb "menu description" is DetailPageCrumb and sortorder is 9111</p>

            </div>
            @using (Html.BeginForm())
            {
                @*@Html.AntiForgeryToken()*@

                <div class="box-body">

                    <div class="">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MenuDescription, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EnumDropDownListFor(model => model.MenuDescription, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MenuDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Note: if Menu Description is Dropdown. you dont need to enter the content", htmlAttributes: new { @class = "control-label" })

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                <textarea name="Content" class="form-control">
            
</textarea>
                                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ShowInHome, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                <div class="">
                                    @Html.EditorFor(model => model.ShowInHome)
                                    @Html.ValidationMessageFor(model => model.ShowInHome, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                       
                        <div class="form-group">
                            @Html.LabelFor(model => model.MetaTage, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.MetaTage, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MetaTage, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.MetaKeyword, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.MetaKeyword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MetaKeyword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Publish, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EnumDropDownListFor(model => model.Publish, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Publish, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <label>if this page will be redirecting to a main page place the url of the page here.</label>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RedirectUrl, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.RedirectUrl, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RedirectUrl, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>
                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
                </div>



            }
        </div>
    </div>
</div>


@section Scripts2 {

        
<script src="https://cloud.tinymce.com/stable/tinymce.min.js"></script>
    <script>
        tinymce.init({
            selector: 'textarea',
            relative_urls: false,
            remove_script_host: false,
            convert_urls: true,
            height: 500,
            plugins: [
                "advlist autolink lists link image charmap print preview anchor",
                "searchreplace visualblocks code fullscreen",
                "insertdatetime media table contextmenu paste imagetools wordcount"
            ],
            toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image",
            imagetools_cors_hosts: ['www.tinymce.com', 'codepen.io'],
            content_css: [
                '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
                '//www.tinymce.com/css/codepen.min.css'
            ]
        });
    </script>
}

