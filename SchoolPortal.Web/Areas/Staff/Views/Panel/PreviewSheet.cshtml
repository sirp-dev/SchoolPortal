@model IEnumerable<SchoolPortal.Web.Models.Dtos.EnrolledSubjectDto>
@using SchoolPortal.Web.Areas.Service
@{
    ViewBag.Title = "Score Sheet";
    int n = 0;
}
<div class="row">
    <div class="col-xs-12">
        <div class="box" style="padding:7px;">


            <div class="row">
                <div class="col-md-5">
                    <div class="box-body table-responsive">
                        <table class="table table-success table-bordered" style="background-color:#3c8dbc; color:#ffffff;">
                            <tr>
                                <th colspan="2" class="text-center">CLASS DETAILS</th>

                            </tr>
                            <tr>
                                <th>Class</th>
                                <td>@ViewBag.Class</td>
                            </tr>
                            <tr>
                                <th>Teacher</th>
                                <td>@ViewBag.subteacher</td>
                            </tr>
                            <tr>
                                <th>Subject</th>
                                <td>@ViewBag.Subject</td>
                            </tr>
                            <tr>
                                <th>Session</th>
                                <td>@ViewBag.Session</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <div id="divTableDataHolder" class="box-body table-responsive no-padding">


                <table id="studentRecord" class="table table-hover">
                    <tr>
                        <th colspan="8">
                            @Html.Raw(TempData["setting"])
                        </th>
                    </tr>
                    <tr>
                        <th> S/N</th>
                        <th>
                            FULL NAME
                        </th>
                        <th style="display:none;"></th>

                        <th>
                            REG. NO.
                        </th>
                        <th>
                            ASSESSMENT SCORE
                        </th>
                        <th>
                            EXAM SCORE
                        </th>
                        <th>
                            IS OFFERED
                        </th>

                        <th></th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            @{n++;}
                            <td>@n</td>
                            <td>
                                @item.FullName
                            </td>

                            <td class="studentRecordId" style="display:none;">
                                <span style="display:none;">@item.Id</span>


                            </td>
                            <td class="subjectId" style="display:none;">

                                <span class="subjectId" style="display:none;">@item.SubjectId</span>

                            </td>
                            <td class="enrollmentId" style="display:none;">

                                <span class="enrollmentId" style="display:none;">@item.EnrollmentId</span>

                            </td>
                            <td class="gradingOption" style="display:none;">

                                <span class="gradingOption" style="display:none;">@item.GradingOption</span>

                            </td>

                            <td>
                                @GeneralService.RegNumByEnrolId(item.Enrollments.StudentProfileId)
                            </td>
                            <td class="TestScore">
                                @*@Html.DisplayFor(modelItem => item.TestScore)*@

                                <span>@Html.DisplayFor(modelItem => item.TestScore)</span>
                                <input type="number" value="@item.TestScore" style="display:none" />
                            </td>
                            <td class="ExamScore">
                                @*@Html.DisplayFor(modelItem => item.ExamScore)*@

                                <span>@Html.DisplayFor(modelItem => item.ExamScore)</span>
                                <input type="number" value="@item.ExamScore" style="display:none" />
                            </td>
                            <td class="IsOffered">

                                <input type="checkbox" class="icheckbox_minimal-blue" name="ischecked" onclick="IsOffered(@item.Id)" id="@item.Id" value="@item.IsOffered" checked="@item.IsOffered" />

                            </td>

                            <td>
                                @if (ViewBag.booling == "true")
                                {
                                    <a class="btn btn-primary">Result Has Been Published</a>
                                }
                                else if (ViewBag.booling == "false")
                                {


                                    <a class="Edit btn btn-primary" href="javascript:;">Edit</a>
                                    <a class="Update btn btn-warning" href="javascript:;" style="display:none">Update</a>
                                    @Html.ActionLink("Edit Single", "Edit", new { id = item.Id, sessId = ViewBag.SessionId }, new { @class = "btn btn-success" })


                                }

                            </td>
                        </tr>
                    }

                </table>

                @*<input type="button" id="btnExport" value=" Export Table data into Excel " />*@
            </div>

        </div>
    </div>
</div>
<div class="text-center">
    <button onclick="myFunction()" style="text-align:center;" class="btn btn-primary">Print Result Sheet</button>

</div>






@section Scripts {
    <script src="http://v1.exwhyzee.ng/admin/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="http://v1.exwhyzee.ng/admin/bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
        @**@
    @*<script type="text/javascript" src="http://ajax.cdnjs.com/ajax/libs/json2/20110223/json2.js"></script>*@
    <script src="http://v1.exwhyzee.ng/Content/angular/json2.js"></script>
    <script type="text/javascript">
        $(function () {
            //////Remove the dummy row if data present.
            ////if ($("#studentRecord tr").length > 2) {
            ////    $("#studentRecord tr:eq(1)").remove();
            ////}
        });
        function AppendRow(row, studentRecordId, subjectId, enrollmentId, gradingOption, testScore, examScore) {
            //Bind id.
            $(".studentRecordId", row).find("span").html(studentRecordId);
            $(".subjectId", row).find("span").html(subjectId);
            $(".enrollmentId", row).find("span").html(enrollmentId);
            $(".gradingOption", row).find("span").html(gradingOption);


            //Bind TestScore.
            $(".TestScore", row).find("span").html(TestScore);
            $(".TestScore", row).find("input").val(TestScore);

            //Bind Country.
            $(".ExamScore", row).find("span").html(ExamScore);
            $(".ExamScore", row).find("input").val(ExamScore);
            $("#studentRecord").append(row);
        };



        //Edit event handler.
        $("body").on("click", "#studentRecord .Edit", function () {
            var row = $(this).closest("tr");
            $("td", row).each(function () {
                if ($(this).find("input").length > 0) {
                    $(this).find("input").show();
                    $(this).find("span").hide();
                }
            });

            row.find(".Update").show();
            row.find(".Cancel").show();
            row.find(".Delete").hide();
            $(this).hide();
        });

        //Update event handler.
        $("body").on("click", "#studentRecord .Update", function () {
            var row = $(this).closest("tr");
            $("td", row).each(function () {
                if ($(this).find("input").length > 0) {
                    var span = $(this).find("span");
                    var input = $(this).find("input");
                    span.html(input.val());
                    span.show();
                    input.hide();
                }
            });
            row.find(".Edit").show();
            row.find(".Delete").show();
            row.find(".Cancel").hide();
            $(this).hide();

            var student = {};
            student.Id = row.find(".studentRecordId").find("span").html();
            student.SubjectId = row.find(".subjectId").find("span").html();
            student.EnrollmentId = row.find(".enrollmentId").find("span").html();
            student.GradingOption = row.find(".gradingOption").find("span").html();
            student.TestScore = row.find(".TestScore").find("span").html();
            student.ExamScore = row.find(".ExamScore").find("span").html();
            console.log(student)
            $.ajax({
                type: "POST",
                url: "@Url.Action("UpdateScore", "Panel", new { area = "Staff" })",
                data: JSON.stringify(student),
                contentType: "application/json; charset=utf-8",
                dataType: "json"
            });
        });

    </script>
    <script>
        function IsOffered(id) {

            var student = {};
            student.Id = id
            $.ajax({
                type: "POST",
                url: "@Url.Action("IsOffered", "Panel", new { area = "Staff" })",
                data: JSON.stringify(student),
                contentType: "application/json; charset=utf-8",
                dataType: "json"

            });
            console.log(student)
        }


    </script>
    <script>
        $("#btnExport").click(function (e) {
            window.open('data:application/vnd.ms-excel,' + $('#dvData').html());
            e.preventDefault();
        });
        $("[id$=myButtonControlID]").click(function (e) {
            window.open('data:application/vnd.ms-excel,' + encodeURIComponent($('div[id$=divTableDataHolder]').html()));

            this.download = name;
            return true;
            e.preventDefault();
        });
    </script>
    <script type="text/jscript">
        $(function () {
            $('#classesId').change(function () {
                $.getJSON('/EventsControl/SubjectByClass/' + $('#classesId').val(), function (data) {
                    var items = '<option>Select a Subject</option>';
                    console.log(data);
                    console.log("check");
                    $.each(data, function (i, local) {
                        items += "<option value='" + local.Value + "'>" + local.Text + "</option>";
                    });
                    $('#Subject').html(items);
                    console.log(items);
                    console.log("check 2");
                });
            });
        });
    </script>
}



@section Scripts2 {
    <script>
        $(function () {
            $('#example1').DataTable()
            $('#example2').DataTable({
                'paging': true,
                'lengthChange': false,
                'searching': false,
                'ordering': true,
                'info': true,
                'autoWidth': false
            })
        })
    </script>
    <script>
        function sortTable() {
            var table, rows, switching, i, x, y, shouldSwitch;
            table = document.getElementById("studentRecord");
            switching = true;
            /* Make a loop that will continue until
            no switching has been done: */
            while (switching) {
                // Start by saying: no switching is done:
                switching = false;
                rows = table.getElementsByTagName("TR");
                /* Loop through all table rows (except the
                first, which contains table headers): */
                for (i = 1; i < (rows.length - 1); i++) {
                    // Start by saying there should be no switching:
                    shouldSwitch = false;
                    /* Get the two elements you want to compare,
                    one from current row and one from the next: */
                    x = rows[i].getElementsByTagName("TD")[0];
                    y = rows[i + 1].getElementsByTagName("TD")[0];
                    // Check if the two rows should switch place:
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                    /* If a switch has been marked, make the switch
                    and mark that a switch has been done: */
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                }
            }
        }
    </script>
    <script>
        $(document).on("click", ".modalLink", function () {

            var sId = $(event.relatedTarget).data('StudentId'); //camelCase, you have - separated data attr
            $(this).find('input[type="hidden"]').val(sId);
            $('#StudentId').val($(this).data('id'));
            $('#subId').val($(this).data('sub-id'));
            $('#sessionId').val($(this).data('sess-id'));

            $(".modal-body .hiddenid").val(passedID);
        });

        function myFunction() {
            window.print();
        }
    </script>
}
