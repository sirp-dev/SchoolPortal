
@model SchoolPortal.Web.Models.Dtos.StudentInfoDto
@using SchoolPortal.Web.Areas.Service
@{
    ViewBag.Title = "EditUser";
}


<div class="row">
    <div class="col-md-3">
        <!-- Widget: user widget style 1 -->
        <!-- /.widget-user -->
    </div>
    <!-- /.col -->
    <div class="col-md-6">
       
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Update @GeneralService.StudentorPupil() Info</h3>
                        @if (TempData["error"] != null)
                        {
                            <div class="alert alert-danger alert-dismissible">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                                @TempData["error"]
                            </div>
                        }
                    </div>
                  
                       
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            @using (Html.BeginForm("EditWardUser", "Panel", new { cid = ViewBag.ClassId }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @*@Html.AntiForgeryToken()*@
                    <div class="box-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.ImageId)
                        @Html.HiddenFor(model => model.Image)
                        @Html.HiddenFor(model => model.userid)
                        @Html.HiddenFor(model => model.Fullname)
                        @Html.HiddenFor(model => model.Firstname)
                        @Html.HiddenFor(model => model.Othername)
                        @Html.HiddenFor(model => model.Surname)
                        @Html.HiddenFor(model => model.DataStatusChanged)
                        @Html.HiddenFor(model => model.Status)
                        @Html.HiddenFor(model => model.DateRegistered)
                        @Html.HiddenFor(model => model.Username)


                        <div class="form-group">
                            @Html.LabelFor(model => model.AboutMe, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.AboutMe, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AboutMe, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                <select name="Gender" class="form-control">
                                    <option value=" "> Select Gender </option>
                                    <option value="Male">Male</option>
                                    <option value="Female">Female</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", id = "datepicker1" } })
                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.ContactAddress, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.ContactAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ContactAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.StateOfOrigin, new { @class = "control-label" })
                            <div class="">
                                @Html.DropDownList("StateOfOrigin", ViewBag.StateOfOrigin as SelectList, "Select a State", new { id = "StateOfOrigin", @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.LocalGov, new { @class = "control-label" })
                            <div class="">
                                <select id="LGA" name="LocalGov" class="form-control"></select>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Disability, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.Disability, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Disability, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EmergencyContact, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.EmergencyContact, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmergencyContact, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.LastPrimarySchoolAttended, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.LastPrimarySchoolAttended, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastPrimarySchoolAttended, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.ParentGuardianName, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.ParentGuardianName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParentGuardianName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ParentGuardianAddress, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.ParentGuardianAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParentGuardianAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ParentGuardianPhoneNumber, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.ParentGuardianPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParentGuardianPhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ParentGuardianOccupation, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.ParentGuardianOccupation, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParentGuardianOccupation, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Passport", htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                <input type="file" name="upload" required="required" class="form-control" />
                            </div>
                        </div>

                    </div>

                        <div class="box-footer">
                            <button type="submit" class="btn btn-primary">Update</button>
                            <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
                        </div>
                    }
                        </div>
                        <!-- /.widget-user -->

                    </div>
    <!-- /.col -->
    <div class="col-md-3">
        <!-- Widget: user widget style 1 -->
        <!-- /.widget-user -->
    </div>
    <!-- /.col -->
</div>

@section Scripts {
        @**@

    <script type="text/jscript">
                $(function () {
                    $('#StateOfOrigin').change(function () {
                        $.getJSON('/EventsControl/LgaList/' + $('#StateOfOrigin').val(), function (data) {
                            var items = '<option>Select a Local Government</option>';
                            $.each(data, function (i, local) {
                                items += "<option value='" + local.Value + "'>" + local.Text + "</option>";
                            });
                            $('#LGA').html(items);
                        });
                    });
    });
    </script>

    <script src="http://v1.exwhyzee.ng/admin/main.js"></script>
}