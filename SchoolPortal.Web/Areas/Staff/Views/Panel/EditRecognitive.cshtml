@model SchoolPortal.Web.Models.Entities.RecognitiveDomain

@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()*@

    <input type="hidden" name="StudentId" id="StudentId" value="" />
    <input type="hidden" name="subId" id="subId" value="" />
    <input type="hidden" name="sessionId" id="sessionId" value="" />
    <div class="modal-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Rememberance, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Rememberance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rememberance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Understanding, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Understanding, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Understanding, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Application, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Application, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Application, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Analyzing, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Analyzing, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Analyzing, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Evaluation, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Evaluation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Evaluation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Creativity, htmlAttributes: new { @class = "control-label" })
            <div class="">
                @Html.EditorFor(model => model.Creativity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Creativity, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-outline">Save changes</button>
    </div>
}

