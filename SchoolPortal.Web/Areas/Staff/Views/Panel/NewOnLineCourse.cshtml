@model SchoolPortal.Web.Models.Dtos.OnlineCourseUploadDto
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "New OnLine Course";
}

<div class="row">
    <!-- left column -->
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <!-- general form elements -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">New Online Course</h3>
                @if (TempData["error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        @TempData["error"]
                    </div>
                }

                @if (TempData["success"] != null)
                {
                    <div class="alert alert-success alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        @TempData["success"]
                    </div>
                }
            </div>
            @using (Html.BeginForm("NewOnLineCourse", "Panel", new { area = "Staff" }, FormMethod.Post, new { @class = "", enctype = "multipart/form-data" }))
            {
                @*@Html.AntiForgeryToken()*@

        <div class="box-body">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                Class
                <div class="">
                    @Html.DropDownList("ClassLevelId", ViewBag.classId as SelectList, "Select a Class", new { id = "classname", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClassLevelId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                Subject
                <div class="">

                    <select id="subject" name="subId" class="form-control"></select>
                </div>
            </div>


            <div class="form-group">
                @Html.Label("Course Topic", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Course Topic" } })
                    @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Upload Type", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EnumDropDownListFor(model => model.UploadType, htmlAttributes: new { @class = "form-control" })

                </div>
            </div>

            <input type="file" class="form-control" id="upload" name="upload" style="margin-bottom:20px;" accept=".doc,.docx,.pdf,.xls,.xlsx,.zip,.rar,.ppt,.3gp,.mp4,.mp3" />



            <div class="form-group">
                @Html.Label("Course Description", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <textarea class="textarea" placeholder="Course Description" name="Description" id="mytextarea"
                              style="width: 100%; height: 100px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;"></textarea>

                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>


            @if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
            {
                <div class="form-group">
                    Class
                    <div class="">
                        @Html.DropDownList("UserId", ViewBag.User as SelectList, "Select a Teacher", new { id = "classname", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else
            {
                string uid = User.Identity.GetUserId();
                <input type="hidden" value="@uid" name="UserId" />
            }


            <h3 class="box-title">Fill below form if any exercise</h3>

            <div class="form-group">
                @Html.Label("Assignment Title", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.AssignmentTitle, new { htmlAttributes = new { @class = "form-control", placeholder = "Assignment Title" } })
                    @Html.ValidationMessageFor(model => model.AssignmentTitle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Assignment Content", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <textarea class="textarea" placeholder="Assignment Content" name="AssignmentContent" id="mytextarea"
                              style="width: 100%; height: 100px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;"></textarea>

                    @Html.ValidationMessageFor(model => model.AssignmentContent, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Submission Date", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <input type="date" name="DateSubmitionEnds" class="form-control" />
                    @Html.ValidationMessageFor(model => model.DateSubmitionEnds, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
                </div>

            }
        </div>

    </div>
    <div class="col-md-2"></div>

</div>



@section Scripts2 {
        @**@


    <script type="text/jscript">
        $(function () {
            $('#classname').change(function () {
                $.getJSON('/Staff/Panel/SubjectList/' + $('#classname').val(), function (data) {
                    var items = '<option>Select a Subject</option>';
                    $.each(data, function (i, local) {
                        items += "<option value='" + local.Value + "'>" + local.Text + "</option>";
                    });
                    console.log(data)
                    $('#subject').html(items);
                });
            });
        });
    </script>

    <script src='https://cloud.tinymce.com/stable/tinymce.min.js'></script>
    <script>
        //tinymce.init({
        //    selector: '#mytextarea'
        //});

        tinymce.init({
            selector: 'textarea',
            height: 400,
            theme: 'modern',
            plugins: [
                'advlist autolink lists link image charmap print preview hr anchor pagebreak',
                'searchreplace wordcount visualblocks visualchars code fullscreen',
                'insertdatetime media nonbreaking save table contextmenu directionality',
                'emoticons template paste textcolor colorpicker textpattern imagetools codesample'
            ],
            toolbar1: 'insertfile undo redo | styleselect | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
            toolbar2: 'print preview media | forecolor backcolor emoticons | codesample',
            image_advtab: true,
            templates: [
                { title: 'Test template 1', content: 'Test 1' },
                { title: 'Test template 2', content: 'Test 2' }
            ],
            content_css: [
                'css?family=Lato:300,300i,400,400i',
                'css/codepen.min.css'
            ]
        });
    </script>
    <script>
        //Date picker
        $('#datepicker').datepicker({
            autoclose: true
        })
    </script>
    <script>
        //Date picker
        $('#datepicker2').datepicker({
            autoclose: true
        })
    </script>

    <script src="http://v1.exwhyzee.ng/admin/main.js"></script>

}

