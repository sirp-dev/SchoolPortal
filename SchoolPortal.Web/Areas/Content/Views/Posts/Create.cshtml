@model SchoolPortal.Web.Models.Entities.Post

@{
    ViewBag.Title = "Create";

}

<div class="row">
    <!-- left column -->
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <!-- general form elements -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">New Post/Article</h3>
                @if (TempData["error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        @TempData["error"]
                    </div>
                }
            </div>
            @using (Html.BeginForm("Create", "Posts", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "", enctype = "multipart/form-data" }))
            {
                @*@Html.AntiForgeryToken()*@

            <div class="box-body">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PreviewContent, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.EditorFor(model => model.PreviewContent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PreviewContent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        <textarea class="textarea" placeholder="Place some text here" name="Content" id="mytextarea"
                                  style="width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;"></textarea>
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.EnumDropDownListFor(model => model.Status, "Choose Status", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PageType, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.EnumDropDownListFor(model => model.PageType, "Choose Page Type", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PageType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.WhoCanSeePost, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.EnumDropDownListFor(model => model.WhoCanSeePost, "Who sees this Post", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.WhoCanSeePost, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    images
                    <div class="">
                        <input type="file" name="upload" multiple="multiple" class="form-control" />
                    </div>
                </div>
            </div>

                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
                </div>

            }
        </div>

    </div>
    <div class="col-md-2"></div>

</div>



@section Style {
    <link href="http://v1.exwhyzee.ng/admin/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.min.css" rel="stylesheet" />
}

@section Scripts {
        
    @*<script src="http://v1.exwhyzee.ng/admin/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.all.min.js"></script>
        <script>
            $(function () {
                // Replace the <textarea id="editor1"> with a CKEditor
                // instance, using default configuration.
                //CKEDITOR.replace('editor1')
                //bootstrap WYSIHTML5 - text editor
                $('.textarea').wysihtml5()
            })
        </script>*@
    <script src="http://v1.exwhyzee.ng/admin/tinymce/js/tinymce/tinymce.min.js"></script>
    @*<script src='https://cloud.tinymce.com/stable/tinymce.min.js'></script>*@
    <script>
        tinymce.init({
            selector: '#mytextarea'
        });
    </script>
}
