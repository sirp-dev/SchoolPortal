@model SchoolPortal.Web.Models.Dtos.StudentInfoDto

@{
    ViewBag.Title = "UpdateProfile";
    if (User.Identity.IsAuthenticated)
    {
        Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Areas/Admin/Views/Shared/_View.cshtml";
    }
}
<div class="row">
    <div class="box box-primary">
        <div class="box-header with-border">
            <h3 class="box-title">Profile Update</h3>

            <div class="alert alert-warning alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <p>Kindly change the wrong informations and complete Your Profile to check your Result.</p>

            </div>
            <div class="alert alert-danger alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <p>All Fields are required</p>

            </div>

        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-md-5">
                    <div class="table-responsive">
                        <table class="table table-success table-bordered" style="background-color:#3c8dbc; color:#ffffff;">
                            <tr>
                                <th>Name</th>
                                <td>@Model.Surname @Model.Firstname @Model.Othername</td>
                            </tr>
                            <tr>
                                <th>Reg. Number</th>
                                <td>@Model.StudentRegNumber</td>
                            </tr>
                            <tr>
                            
                        </table>
                    </div>
                </div>
            </div>
        </div>
        @using (Html.BeginForm())
        {
            @*@Html.AntiForgeryToken()*@

            <div class="box-body">



                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.userid)
                @Html.HiddenFor(model => model.Username)
                @Html.HiddenFor(model => model.StudentRegNumber)
                @Html.HiddenFor(model => model.Fullname)
                @Html.HiddenFor(model => model.Surname)
                @Html.HiddenFor(model => model.Firstname)
                @Html.HiddenFor(model => model.Othername)
                @Html.HiddenFor(model => model.DataStatusChanged)
                @Html.HiddenFor(model => model.DateRegistered)
                @Html.HiddenFor(model => model.RegisteredBy)

                <!-- left column -->
                <div class="col-md-4">
                    <div class="form-group btn-primary">
                        @Html.Label("Personal Information", htmlAttributes: new { @class = "control-label", style="padding:5px;" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required="required" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(m => m.DateOfBirth, new { @class = "control-label" })
                        <div class="">
                            @Html.TextBoxFor(m => m.DateOfBirth, new { @class = "form-control", id = "datepicker1", placeholder = "month/day/year", required = "required" })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Gender", htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            <select name="Gender" class="form-control" required="required">
                                <option value=""> Select Gender </option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactAddress, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.ContactAddress, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.ContactAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.StateOfOrigin, new { @class = "control-label" })
                        <div class="">
                            @Html.DropDownList("StateOfOrigin", ViewBag.StateOfOrigin as SelectList, "Select a State", new { id = "StateOfOrigin", @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(model => model.StateOfOrigin, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.LocalGov, new { @class = "control-label" })
                        <div class="">
                            <select id="LGA" name="LocalGov" class="form-control"></select>
                            @Html.ValidationMessageFor(model => model.LocalGov, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group btn-primary">
                        @Html.Label("Social Information", htmlAttributes: new { @class = "control-label", style = "padding:5px;" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Disability, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Disability, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Disability, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmergencyContact, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.EmergencyContact, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.EmergencyContact, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AboutMe, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.AboutMe, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.AboutMe, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FavouriteFood, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.FavouriteFood, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.FavouriteFood, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BooksYouLike, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.BooksYouLike, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.BooksYouLike, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MoviesYouLike, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.MoviesYouLike, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.MoviesYouLike, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TVShowsYouLike, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.TVShowsYouLike, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.TVShowsYouLike, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.YourLikes, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.YourLikes, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.YourLikes, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.YourDisLikes, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.YourDisLikes, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.YourDisLikes, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FavouriteColour, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.FavouriteColour, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.FavouriteColour, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastPrimarySchoolAttended, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.LastPrimarySchoolAttended, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.LastPrimarySchoolAttended, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-md-4">
                    <!-- general form elements -->

                    <div class="form-group btn-primary">
                        @Html.Label("Parent or Guardian", htmlAttributes: new { @class = "control-label", style = "padding:5px;", required = "required" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ParentGuardianName, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.ParentGuardianName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.ParentGuardianName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ParentGuardianAddress, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.ParentGuardianAddress, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.ParentGuardianAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ParentGuardianPhoneNumber, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.ParentGuardianPhoneNumber, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.ParentGuardianPhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ParentGuardianOccupation, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.ParentGuardianOccupation, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.ParentGuardianOccupation, "", new { @class = "text-danger" })
                        </div>
                    </div>






                </div>




            </div>
            <div class="box-footer">
                <button type="submit" class="btn btn-primary">Save</button>
                <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
                @Html.ActionLink("Skip", "Result", new { skip = "skip" }, new { @class="btn btn-success"})
            </div>

        }
    </div>

</div>
@section Scripts {
    

    <script type="text/jscript">
        $(function () {
            $('#StateOfOrigin').change(function () {
                $.getJSON('/Student/Panel/LgaList/' + $('#StateOfOrigin').val(), function (data) {
                    var items = '<option>Select a Local Government</option>';
                    $.each(data, function (i, local) {
                        items += "<option value='" + local.Value + "'>" + local.Text + "</option>";
                    });
                    $('#LGA').html(items);
                });
            });
        });
    </script>

    <script src="http://v1.exwhyzee.ng/admin/main.js"></script>
}
