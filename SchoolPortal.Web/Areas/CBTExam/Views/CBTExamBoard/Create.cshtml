@model SchoolPortal.Web.Models.Entities.SettingModel

@{
    ViewBag.Title = "Create";

    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Style {

    <!-- summernote -->
    <link href="http://v1.exwhyzee.ng/Content/summernote/summernote-bs4.css" rel="stylesheet" />
}

<div class="row">
    <!-- left column -->
    <div class="col-md-1"></div>
    <div class="col-md-10">
        <!-- general form elements -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Add Examination</h3>
                @if (TempData["error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        @TempData["error"]
                    </div>
                }
            </div>

            @using (Html.BeginForm("Create", "CBTExamBoard", FormMethod.Post, new { role = "form" }))
            {
                @*@Html.AntiForgeryToken()*@

                <input type="hidden" name="xgink" value="@ViewBag.xgink" />
                <input type="hidden" name="unixconverify" value="@ViewBag.unixconverify" />
                <input type="hidden" name="role" value="@ViewBag.role" />
                <input type="hidden" name="Session" value="@ViewBag.Session" />
                <input type="hidden" name="Term" value="@ViewBag.Term" />
                @*<input type="hidden" name="className" value="@ViewBag.className" />*@



                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="box-body">


            <div class="form-group">
                @Html.LabelFor(model => model.ClassName, "Class", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.DropDownListFor(model => model.ClassName, ViewBag.className as SelectList, "Select a Class", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClassName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExamMode, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EnumDropDownListFor(model => model.ExamMode, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ExamMode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SubjectCount,"Number Of Subject", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.SubjectCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubjectCount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShuffleQuestion, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <div class="">
                        @Html.EditorFor(model => model.ShuffleQuestion)
                        @Html.ValidationMessageFor(model => model.ShuffleQuestion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShuffleOption, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    <div class="">
                        @Html.EditorFor(model => model.ShuffleOption)
                        @Html.ValidationMessageFor(model => model.ShuffleOption, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


        </div>

                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Create Exam</button>
                    <a href="javascript: history.back()" class="btn btn-default">Cancel</a>
                </div>

            }

        </div>

    </div>
    <div class="col-md-1"></div>

</div>


@section Scripts {
        
    <!-- Summernote -->
    <script src="http://v1.exwhyzee.ng/Content/summernote/summernote-bs4.min.js"></script>
    <script>
        $(function () {
            // Summernote
            $('.textarea').summernote({ height: 300, minHeight: null, maxHeight: null, focus: !0 })
        })
    </script>

    
}
